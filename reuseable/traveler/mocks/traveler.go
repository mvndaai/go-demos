// Code generated by MockGen. DO NOT EDIT.
// Source: ./traveler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTraveler is a mock of Traveler interface.
type MockTraveler struct {
	ctrl     *gomock.Controller
	recorder *MockTravelerMockRecorder
}

// MockTravelerMockRecorder is the mock recorder for MockTraveler.
type MockTravelerMockRecorder struct {
	mock *MockTraveler
}

// NewMockTraveler creates a new mock instance.
func NewMockTraveler(ctrl *gomock.Controller) *MockTraveler {
	mock := &MockTraveler{ctrl: ctrl}
	mock.recorder = &MockTravelerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTraveler) EXPECT() *MockTravelerMockRecorder {
	return m.recorder
}

// Travel mocks base method.
func (m *MockTraveler) Travel(arg0 time.Duration) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Travel", arg0)
	ret0, _ := ret[0].(float64)
	return ret0
}

// Travel indicates an expected call of Travel.
func (mr *MockTravelerMockRecorder) Travel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Travel", reflect.TypeOf((*MockTraveler)(nil).Travel), arg0)
}
